<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="TTCommon.t4" #>
<#@ output extension=".xaml" #>
<Window x:Class="T4DataEntry.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:T4DataEntry"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
	<TabControl>
        <# 

		const int Margin = 5;

		var tables = GetTables(); 


		foreach (var table in tables)
		{

		    WriteLine($"<TabItem x:Name=\"tab{table.Key}\" Header=\"{table.Key}\" HorizontalAlignment=\"Left\" Height=\"20\" Margin=\"0\" VerticalAlignment=\"Top\">");
			PushIndent("    ");

			// grid that horizontally splits the listbox and the data entry
			WriteLine("<Grid Grid.Row=\"0\" Background=\"#FFE5E5E5\">");
			PushIndent("    ");
			WriteLine($"<Grid.RowDefinitions>");
            WriteLine($"    <RowDefinition />");
            WriteLine($"    <RowDefinition />");
            WriteLine($"</Grid.RowDefinitions>");


            WriteLine("<Grid Grid.Row=\"0\" Background=\"#FFE5E5E5\">");
			PushIndent("    ");
			WriteLine($"<DataGrid x:Name=\"dg{table.Key}\" Margin=\"{Margin},{Margin},{Margin},{Margin}\" KeyUp=\"DataGrid_KeyUp\" MouseLeftButtonDown=\"DataGrid_MouseLeftButtonDown\" SelectionChanged=\"{table.Key}_SelectionChanged\">");
			WriteLine("    <DataGrid.Columns>");
			foreach (var column in table.Value)
			{
				if (column.IsId)
					continue;

				WriteLine($"        <DataGridTextColumn Header=\"{column.Name}\" IsReadOnly=\"True\" Binding=\"{{Binding {column.Name}}}\" Width=\"1*\" />");
			}
			WriteLine("    </DataGrid.Columns>");


			WriteLine($"</DataGrid>");
			PopIndent();
			WriteLine($"</Grid>");
			// </list of records>


            WriteLine("<Grid Grid.Row=\"1\" Background=\"#FFE5E5E5\">");
			PushIndent("    ");
			WriteLine($"<Grid.ColumnDefinitions>");
            WriteLine($"    <ColumnDefinition Width=\"1*\"/>");
            WriteLine($"    <ColumnDefinition Width=\"3*\"/>");
            WriteLine($"</Grid.ColumnDefinitions>");
            
			WriteLine($"<Grid.RowDefinitions>");
			foreach (var column in table.Value)
			{
				WriteLine($"    <RowDefinition Height=\"1*\"/>");
			}
			
			WriteLine($"    <RowDefinition Height=\"1*\"/>"); // save button
            WriteLine($"</Grid.RowDefinitions>");
			WriteLine("");
			PopIndent();

			var row = 0;
			// Create the data entry elements for each column
			foreach (var column in table.Value)
			{
				WriteLine($"    <Label Content=\"{column.Name}\" Grid.Row=\"{row}\" Grid.Column=\"0\" Margin=\"{Margin},{Margin},{Margin},{Margin}\"/>");

				if (column.IsPrimaryKey)
				{
					WriteLine($"    <ComboBox Grid.Row=\"{row}\" Grid.Column=\"1\" x:Name=\"{column.UIElementName}\" Margin=\"{Margin},{Margin},{Margin},{Margin}\" KeyUp=\"{table.Key}_KeyUp\" IsEditable=\"{column.Type == "string"}\" />");
				}
				else
				{
					switch (column.Type)
					{
						case "DateTime":
						case "DateTime?":
							WriteLine($"    <DatePicker Grid.Row=\"{row}\" Grid.Column=\"1\" x:Name=\"{column.UIElementName}\" KeyUp=\"{table.Key}_KeyUp\" Margin=\"{Margin},{Margin},{Margin},{Margin}\" />");
							break;
						case "bool":
						case "bool?":
							WriteLine($"    <CheckBox Grid.Row=\"{row}\" Grid.Column=\"1\" x:Name=\"{column.UIElementName}\" KeyUp=\"{table.Key}_KeyUp\" Margin=\"{Margin},{Margin},{Margin},{Margin}\" IsThreeState=\"{column.Type == "bool?"}\" />");
							break;
						default:
							WriteLine($"    <ComboBox Grid.Row=\"{row}\" Grid.Column=\"1\" x:Name=\"{column.UIElementName}\" KeyUp=\"{table.Key}_KeyUp\" Margin=\"{Margin},{Margin},{Margin},{Margin}\" IsEditable=\"{!column.IsId}\" />");
							break;
					}
				}
				WriteLine("");
				row++;
			}

			WriteLine($"    <Button Grid.Row=\"{row}\" Grid.Column=\"1\" x:Name=\"btn{table.Key}_Save\" Margin=\"{Margin},{Margin},{Margin},{Margin}\" Content=\"Save\" Click=\"{table.Key}_Click\" />");
				

				
            WriteLine("</Grid>");
            WriteLine("</Grid>");
			PopIndent();
            WriteLine("</TabItem>");
			PopIndent();
			WriteLine("");
		}

		#>
		        
	</TabControl>
    </Grid>
</Window>